#+TITLE:	Music History
#+SUBTITLE:	Log
#+OPTIONS:	toc:nil num:nil
#+STARTUP:	indent showeverything
#+CATEGORY:	Projects
#+TAGS:		log python MusicHistory MusicAnalytics smplayer mpv

* Wednesday, October 26, 2022
:LOGBOOK:
CLOCK: [2022-10-26 Wed 04:12]--[2022-10-26 Wed 04:15] =>  0:03
:END:
- ~log_analyzer~ ran overnight, without a hitch; the ~to_sql~ function is using ~append~ now, instead of ~replace~

* Tuesday, October 25, 2022
:LOGBOOK:
CLOCK: [2022-10-25 Tue 16:53]--[2022-10-25 Tue 17:16] =>  0:23
CLOCK: [2022-10-25 Tue 11:38]--[2022-10-25 Tue 12:58] =>  1:20
CLOCK: [2022-10-25 Tue 04:15]--[2022-10-25 Tue 07:22] =>  3:07
:END:
- Moved ~config.py~ from ~src/musichistory~ to ~~/.config/MusicHistory~; this seems to make the ~.env~ file irrelevant, unless I also move it
- ~log_anaylzer2~ has been merged into ~log_extractor~
- Imported the old ~smplayer_history~ file (~20220518.csv.xz~)
- The database now contains all of the music history data

* Monday, October 24, 2022
:LOGBOOK:
CLOCK: [2022-10-24 Mon 14:36]--[2022-10-24 Mon 16:32] =>  1:56
CLOCK: [2022-10-24 Mon 04:24]--[2022-10-24 Mon 06:21] =>  1:57
:END:
- After binge-watching /St. Elsewhere/ and /The X-Files/, I have actually been listening to music for the last couple of days, so it is time to work on the Top XXX lists
- I see the database has incorrect timestamps (in the future)
  * ~log_extractor~ - This is where timestamps and filenames are extracted from the SMPlayer logs and CSV summaries are created; I moved the logic to convert timestamps here, since they are correct
  * Re-running ~log_extractor~ on the entire dataset (150 days worth)
- The ~MusicHistory~ folder is 56 GB in size!
  * Compressed about 150 file with ~xz~ and got it down to 2.1 GB
- Ready to combine ~log_extractor2~ and ~log_analyzer~
- Created ~touchdirs2.py~ as a scratch file, as a replacement for ~touchdirs~
  * It uses ~os.walk~ and is both faster and simpler than I expected
  * It isn't ready for production-use, yet--I need to code logic for filetypes like MP4

* Friday, June 17, 2022
:LOGBOOK:
CLOCK: [2022-06-17 Fri 15:42]--[2022-06-17 Fri 18:23] =>  2:41
CLOCK: [2022-06-17 Fri 12:20]--[2022-06-17 Fri 12:32] =>  0:12
CLOCK: [2022-06-17 Fri 06:55]--[2022-06-17 Fri 07:22] =>  0:27
:END:
- Moved ~Music-Analytics~ from the old ~MusicHistory~ project to the ~bin~ directory and renamed it to ~log_anaylzer~, to standardize the command names
  * It doesn't work with the new log files, yet
  * I'm not sure how to add any of these as commands to the project, so that they will be installed, but that can come later
- The CSV files have Unix timestamps, but Pandas ~to_datetime()~  function doesn't produce the correct date, so I will try it in the database, instead
- Created baseline for ~developmentdb.media_library~ 

  
* Tuesday, June 14, 2022
:LOGBOOK:
CLOCK: [2022-06-14 Tue 14:05]--[2022-06-14 Tue 16:23] =>  2:18
CLOCK: [2022-06-14 Tue 09:34]--[2022-06-14 Tue 11:02] =>  1:28
:END:
- After mucking-about with multidb and schemas, it looks like I misunderstood what ~multidb~ is all about
  * My app only uses one database, so the ~--multidb~ option when initializing alembic is unnecessary
  * Multiple schemas can be used with a single database by way of the ~--name~ option and corresponding section in ~alembic.ini~
- Alembic Test #3 was supposed to use the ~development~ schema, ~media_library~ but it used ~alembic_test~, as specified in ~.env~
- Alembic Test #4 was successful, after I temporarily renamed ~dt_fileinfo~, in order to verify that the upgrade script works
  * It should be noted that Alembic uses the environment set in ~models.py~, not ~alembic.ini~
** Multi-Schema Alembic Configuration has been achieved
- I haven't created a baseline for the ~developmentdb~ database, yet, but I created a few database and schema combinations that enabled me to configure Alembic to work with the databases and schemas of my choosing, as defined in ~models.py~, which calls ~config.py~, which loads environment variables stored in ~.env~ files
- ~alembic.ini~ needs to have named sections that correspond to the database/schema combinations in the application, and ~version_locations~ defined for each one
- See [[./src/musichistory/alembic_history][alembic_history]] for the command history of tests performed
** DONE Next Steps
*** DONE Create a baseline for the database
*** DONE Bring commands over from ~MusicHistory_old~
  
* Monday, June 13, 2022
:LOGBOOK:
CLOCK: [2022-06-13 Mon 20:07]--[2022-06-13 Mon 22:11] =>  2:04
CLOCK: [2022-06-13 Mon 13:33]--[2022-06-13 Mon 18:09] =>  4:36
CLOCK: [2022-06-13 Mon 08:48]--[2022-06-13 Mon 12:24] =>  3:36
:END:
- Alembic Reference: [[https://learningtotest.com/2021/06/17/managing-alembic-migrations-with-a-single-alembic-ini-env-py/][Alembic Configuration]]
  * I think I need to change ~models.py~ to use ~create_engine~, if I am going to get this to work
- Another Reference: [[https://elarkk.github.io/blog/multi-schema-sqlalchemy][Multi-schema Postgres database handling through SQLAlchemy]]
  * This one needs work
- I was trying to get Alembic to handle multiple databases and schemas, but it isn't working
  * My current configuration does store the schema with the SQL operations, which is a good thing



